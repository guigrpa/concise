// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`preprocessSchema allows custom inverse relations (name) 1`] = `
Object {
  "authRules": Array [],
  "models": Object {
    "person": Object {
      "existsInClient": true,
      "existsInServer": true,
      "fields": Object {
        "id": Object {
          "existsInClient": true,
          "existsInServer": true,
          "isMassAssignable": true,
          "type": "string",
        },
      },
      "plural": "people",
      "relations": Object {
        "createdPosts": Object {
          "fkName": "createdPostIds",
          "inverseName": "person",
          "isInverse": true,
          "isPlural": true,
          "model": "post",
          "type": "string",
        },
      },
      "singular": "person",
    },
    "post": Object {
      "existsInClient": true,
      "existsInServer": true,
      "fields": Object {
        "id": Object {
          "existsInClient": true,
          "existsInServer": true,
          "isMassAssignable": true,
          "type": "string",
        },
      },
      "plural": "posts",
      "relations": Object {
        "person": Object {
          "fkName": "personId",
          "inverseName": "createdPosts",
          "isInverse": false,
          "isPlural": false,
          "model": "person",
          "type": "string",
        },
      },
      "singular": "post",
    },
  },
}
`;

exports[`preprocessSchema allows custom inverse relations (singular) 1`] = `
Object {
  "authRules": Array [],
  "models": Object {
    "address": Object {
      "existsInClient": true,
      "existsInServer": true,
      "fields": Object {
        "id": Object {
          "existsInClient": true,
          "existsInServer": true,
          "isMassAssignable": true,
          "type": "string",
        },
      },
      "plural": "addresses",
      "relations": Object {
        "person": Object {
          "fkName": "personId",
          "inverseName": "address",
          "isInverse": false,
          "isPlural": false,
          "model": "person",
          "type": "string",
        },
      },
      "singular": "address",
    },
    "person": Object {
      "existsInClient": true,
      "existsInServer": true,
      "fields": Object {
        "id": Object {
          "existsInClient": true,
          "existsInServer": true,
          "isMassAssignable": true,
          "type": "string",
        },
      },
      "plural": "people",
      "relations": Object {
        "address": Object {
          "fkName": "addressId",
          "inverseName": "person",
          "isInverse": true,
          "isPlural": false,
          "model": "address",
          "type": "string",
        },
      },
      "singular": "person",
    },
  },
}
`;

exports[`preprocessSchema allows disabling inverse relations 1`] = `
Object {
  "authRules": Array [],
  "models": Object {
    "person": Object {
      "existsInClient": true,
      "existsInServer": true,
      "fields": Object {
        "id": Object {
          "existsInClient": true,
          "existsInServer": true,
          "isMassAssignable": true,
          "type": "string",
        },
      },
      "plural": "people",
      "relations": Object {},
      "singular": "person",
    },
    "post": Object {
      "existsInClient": true,
      "existsInServer": true,
      "fields": Object {
        "id": Object {
          "existsInClient": true,
          "existsInServer": true,
          "isMassAssignable": true,
          "type": "string",
        },
      },
      "plural": "posts",
      "relations": Object {
        "person": Object {
          "fkName": "personId",
          "inverseName": null,
          "isInverse": false,
          "isPlural": false,
          "model": "person",
          "type": "string",
        },
      },
      "singular": "post",
    },
  },
}
`;

exports[`preprocessSchema completes custom relations 1`] = `
Object {
  "authRules": Array [],
  "models": Object {
    "person": Object {
      "existsInClient": true,
      "existsInServer": true,
      "fields": Object {
        "id": Object {
          "existsInClient": true,
          "existsInServer": true,
          "isMassAssignable": true,
          "type": "string",
        },
      },
      "plural": "people",
      "relations": Object {
        "posts": Object {
          "fkName": "postIds",
          "inverseName": "author",
          "isInverse": true,
          "isPlural": true,
          "isRequired": true,
          "model": "post",
          "type": "string",
        },
      },
      "singular": "person",
    },
    "post": Object {
      "existsInClient": true,
      "existsInServer": true,
      "fields": Object {
        "id": Object {
          "existsInClient": true,
          "existsInServer": true,
          "isMassAssignable": true,
          "type": "string",
        },
      },
      "plural": "posts",
      "relations": Object {
        "author": Object {
          "fkName": "authorId",
          "inverseName": "posts",
          "isInverse": false,
          "isPlural": false,
          "isRequired": true,
          "model": "person",
          "type": "string",
        },
      },
      "singular": "post",
    },
  },
}
`;

exports[`preprocessSchema processes a shorthand relation 1`] = `
Object {
  "authRules": Array [],
  "models": Object {
    "person": Object {
      "existsInClient": true,
      "existsInServer": true,
      "fields": Object {
        "id": Object {
          "existsInClient": true,
          "existsInServer": true,
          "isMassAssignable": true,
          "type": "string",
        },
      },
      "plural": "people",
      "relations": Object {
        "posts": Object {
          "fkName": "postIds",
          "inverseName": "person",
          "isInverse": true,
          "isPlural": true,
          "model": "post",
          "type": "string",
        },
      },
      "singular": "person",
    },
    "post": Object {
      "existsInClient": true,
      "existsInServer": true,
      "fields": Object {
        "id": Object {
          "existsInClient": true,
          "existsInServer": true,
          "isMassAssignable": true,
          "type": "string",
        },
      },
      "plural": "posts",
      "relations": Object {
        "person": Object {
          "fkName": "personId",
          "inverseName": "posts",
          "isInverse": false,
          "isPlural": false,
          "model": "person",
          "type": "string",
        },
      },
      "singular": "post",
    },
  },
}
`;

exports[`preprocessSchema processes included fields 1`] = `
Object {
  "authRules": Array [],
  "models": Object {
    "person": Object {
      "existsInClient": true,
      "existsInServer": true,
      "fields": Object {
        "id": Object {
          "existsInClient": true,
          "existsInServer": true,
          "isMassAssignable": true,
          "type": "string",
        },
        "name": Object {
          "existsInClient": true,
          "existsInServer": true,
          "isMassAssignable": true,
          "type": "string",
        },
      },
      "plural": "people",
      "relations": Object {},
      "singular": "person",
    },
  },
}
`;

exports[`preprocessSchema respects unknown schema attributes 1`] = `
Object {
  "authRules": Array [],
  "models": Object {
    "person": Object {
      "existsInClient": true,
      "existsInServer": true,
      "fields": Object {
        "name": Object {
          "existsInClient": true,
          "existsInServer": true,
          "foo": 3,
          "isMassAssignable": true,
          "type": "string",
        },
      },
      "foo": 3,
      "plural": "people",
      "relations": Object {},
      "singular": "person",
    },
  },
  "schemaFoo": 5,
}
`;

exports[`preprocessSchema sets the right name on a shorthand plural relation 1`] = `
Object {
  "authRules": Array [],
  "models": Object {
    "person": Object {
      "existsInClient": true,
      "existsInServer": true,
      "fields": Object {
        "id": Object {
          "existsInClient": true,
          "existsInServer": true,
          "isMassAssignable": true,
          "type": "string",
        },
      },
      "plural": "people",
      "relations": Object {
        "posts": Object {
          "fkName": "postIds",
          "inverseName": "people",
          "isInverse": false,
          "isPlural": true,
          "model": "post",
          "type": "string",
        },
      },
      "singular": "person",
    },
    "post": Object {
      "existsInClient": true,
      "existsInServer": true,
      "fields": Object {
        "id": Object {
          "existsInClient": true,
          "existsInServer": true,
          "isMassAssignable": true,
          "type": "string",
        },
      },
      "plural": "posts",
      "relations": Object {
        "people": Object {
          "fkName": "personIds",
          "inverseName": "posts",
          "isInverse": true,
          "isPlural": true,
          "model": "person",
          "type": "string",
        },
      },
      "singular": "post",
    },
  },
}
`;
